{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\nimport axios from \"axios\";\nconst en = JSON.stringify({\n  texl: ''\n});\n\nconst loadResources = async () => {\n  return await axios.get('/').then(response => {\n    console.log(en);\n    return en.data;\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\nconst backendOptions = {\n  loadPath: '{{lng}}|{{ns}}',\n  request: (options, url, payload, callback) => {\n    try {\n      loadResources().then(response => {\n        callback(null, {\n          data: response,\n          status: 200\n        });\n      });\n    } catch (e) {\n      console.error(e);\n      callback(null, {\n        status: 500\n      });\n    }\n  }\n};\ni18n.use(Backend).use(initReactI18next).init({\n  backend: backendOptions,\n  fallbackLng: \"en\",\n  debug: false,\n  load: \"languageOnly\",\n  ns: [\"translations\"],\n  defaultNS: \"translations\",\n  keySeparator: false,\n  interpolation: {\n    escapeValue: false,\n    formatSeparator: \",\"\n  },\n  react: {\n    wait: true\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/Users/nazargavucak/Desktop/react_i18next_project/src/i18n.js"],"names":["i18n","initReactI18next","Backend","axios","en","JSON","stringify","texl","loadResources","get","then","response","console","log","data","catch","error","backendOptions","loadPath","request","options","url","payload","callback","status","e","use","init","backend","fallbackLng","debug","load","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,EAAE,GAAGC,IAAI,CAACC,SAAL,CAAe;AACtBC,EAAAA,IAAI,EAAE;AADgB,CAAf,CAAX;;AAIA,MAAMC,aAAa,GAAC,YAAU;AAC1B,SAAO,MAAML,KAAK,CAACM,GAAN,CAAU,GAAV,EACRC,IADQ,CACFC,QAAD,IAAc;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ;AACA,WAAOA,EAAE,CAACU,IAAV;AACH,GAJQ,EAMRC,KANQ,CAMDC,KAAD,IAAW;AAAEJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAAqB,GANhC,CAAb;AAOH,CARD;;AAUA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE,gBADS;AAEnBC,EAAAA,OAAO,EAAE,CAACC,OAAD,EAAUC,GAAV,EAAeC,OAAf,EAAwBC,QAAxB,KAAqC;AAC1C,QAAI;AACAf,MAAAA,aAAa,GAAGE,IAAhB,CAAsBC,QAAD,IAAc;AAC/BY,QAAAA,QAAQ,CAAC,IAAD,EAAO;AACXT,UAAAA,IAAI,EAAEH,QADK;AAEXa,UAAAA,MAAM,EAAE;AAFG,SAAP,CAAR;AAIH,OALD;AAMH,KAPD,CAOE,OAAOC,CAAP,EAAU;AACRb,MAAAA,OAAO,CAACI,KAAR,CAAcS,CAAd;AACAF,MAAAA,QAAQ,CAAC,IAAD,EAAO;AACXC,QAAAA,MAAM,EAAE;AADG,OAAP,CAAR;AAGH;AACJ;AAhBkB,CAAvB;AAoBAxB,IAAI,CACD0B,GADH,CACOxB,OADP,EAEGwB,GAFH,CAEOzB,gBAFP,EAGK0B,IAHL,CAGU;AACFC,EAAAA,OAAO,EAAEX,cADP;AAEFY,EAAAA,WAAW,EAAE,IAFX;AAGFC,EAAAA,KAAK,EAAE,KAHL;AAIFC,EAAAA,IAAI,EAAE,cAJJ;AAKFC,EAAAA,EAAE,EAAE,CAAC,cAAD,CALF;AAMFC,EAAAA,SAAS,EAAE,cANT;AAOFC,EAAAA,YAAY,EAAE,KAPZ;AAQFC,EAAAA,aAAa,EAAE;AACXC,IAAAA,WAAW,EAAE,KADF;AAEXC,IAAAA,eAAe,EAAE;AAFN,GARb;AAYFC,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE;AADH;AAZL,CAHV;AAoBA,eAAevC,IAAf","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\nimport axios from \"axios\";\n\n\nconst en = JSON.stringify({\n    texl: ''\n})\n\nconst loadResources=async()=> {\n    return await axios.get('/')\n        .then((response) => {\n            console.log(en)\n            return en.data\n        })\n\n        .catch((error) => { console.log(error); });\n}\n\nconst backendOptions = {\n    loadPath: '{{lng}}|{{ns}}',\n    request: (options, url, payload, callback) => {\n        try {\n            loadResources().then((response) => {\n                callback(null, {\n                    data: response,\n                    status: 200,\n                });\n            });\n        } catch (e) {\n            console.error(e);\n            callback(null, {\n                status: 500,\n            });\n        }\n    },\n};\n\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n    .init({\n        backend: backendOptions,\n        fallbackLng: \"en\",\n        debug: false,\n        load: \"languageOnly\",\n        ns: [\"translations\"],\n        defaultNS: \"translations\",\n        keySeparator: false,\n        interpolation: {\n            escapeValue: false,\n            formatSeparator: \",\"\n        },\n        react: {\n            wait: true\n        }\n    })\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}