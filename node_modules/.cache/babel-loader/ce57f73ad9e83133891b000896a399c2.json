{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\nimport axios from \"axios\";\n\nconst loadResources = async locale => {\n  return await axios().get('/translate-data/get', {\n    params: {\n      lang: locale\n    }\n  }).then(response => {\n    return response.data;\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\nconst backendOptions = {\n  loadPath: '{{lng}}|{{ns}}',\n  request: (options, url, payload, callback) => {\n    try {\n      const [lng] = url.split('|');\n      loadResources(lng).then(response => {\n        callback(null, {\n          data: response,\n          status: 200\n        });\n      });\n    } catch (e) {\n      console.error(e);\n      callback(null, {\n        status: 500\n      });\n    }\n  }\n};\ni18n.use(Backend).use(initReactI18next).init({\n  fallbackLng: \"en\"\n});\nexport default i18n;","map":{"version":3,"sources":["/Users/nazargavucak/Desktop/react_i18next_project/src/i18n.js"],"names":["i18n","initReactI18next","Backend","axios","loadResources","locale","get","params","lang","then","response","data","catch","error","console","log","backendOptions","loadPath","request","options","url","payload","callback","lng","split","status","e","use","init","fallbackLng"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,aAAa,GAAC,MAAMC,MAAN,IAAgB;AAChC,SAAO,MAAMF,KAAK,GAAGG,GAAR,CAAY,qBAAZ,EAAmC;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAEH;AAAR;AAAV,GAAnC,EACRI,IADQ,CACFC,QAAD,IAAc;AAAE,WAAOA,QAAQ,CAACC,IAAhB;AAAsB,GADnC,EAERC,KAFQ,CAEDC,KAAD,IAAW;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAqB,GAFhC,CAAb;AAGH,CAJD;;AAMA,MAAMG,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE,gBADS;AAEnBC,EAAAA,OAAO,EAAE,CAACC,OAAD,EAAUC,GAAV,EAAeC,OAAf,EAAwBC,QAAxB,KAAqC;AAC1C,QAAI;AACA,YAAM,CAACC,GAAD,IAAQH,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAd;AACApB,MAAAA,aAAa,CAACmB,GAAD,CAAb,CAAmBd,IAAnB,CAAyBC,QAAD,IAAc;AAClCY,QAAAA,QAAQ,CAAC,IAAD,EAAO;AACXX,UAAAA,IAAI,EAAED,QADK;AAEXe,UAAAA,MAAM,EAAE;AAFG,SAAP,CAAR;AAIH,OALD;AAMH,KARD,CAQE,OAAOC,CAAP,EAAU;AACRZ,MAAAA,OAAO,CAACD,KAAR,CAAca,CAAd;AACAJ,MAAAA,QAAQ,CAAC,IAAD,EAAO;AACXG,QAAAA,MAAM,EAAE;AADG,OAAP,CAAR;AAGH;AACJ;AAjBkB,CAAvB;AAqBAzB,IAAI,CACD2B,GADH,CACOzB,OADP,EAEGyB,GAFH,CAEO1B,gBAFP,EAGG2B,IAHH,CAGQ;AACJC,EAAAA,WAAW,EAAE;AADT,CAHR;AAOA,eAAe7B,IAAf","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\nimport axios from \"axios\";\n\n\nconst loadResources=async(locale)=> {\n    return await axios().get('/translate-data/get', { params: { lang: locale } })\n        .then((response) => { return response.data })\n        .catch((error) => { console.log(error); });\n}\n\nconst backendOptions = {\n    loadPath: '{{lng}}|{{ns}}',\n    request: (options, url, payload, callback) => {\n        try {\n            const [lng] = url.split('|');\n            loadResources(lng).then((response) => {\n                callback(null, {\n                    data: response,\n                    status: 200,\n                });\n            });\n        } catch (e) {\n            console.error(e);\n            callback(null, {\n                status: 500,\n            });\n        }\n    },\n};\n\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\"\n  });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}